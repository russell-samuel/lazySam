#!/bin/bash

# auto create soft-link for the structures from zip/ 

path_to_script=$(dirname $0)
cd ${path_to_script}
# echo $PWD
path_to_sum_file='summary.csv'
path_to_structures='zip'
readarray -O 0  lines < <(cat ${path_to_sum_file})
# echo ${aa[@]}
# echo ${aa[0]}
# echo ${aa[1]}
# echo ${aa[2]}
# count=1
# for a in ${aa[@]}; do
#   echo $count
#   echo ${a}
#   count=$((count + 1))
# done
line_tot=${#lines[@]}
for (( i=0; i<${line_tot}; i++ )); do
  line=${lines[${i}]}
  # echo $line
  fields=( ${line} )
  # echo $fields
  # echo ${#fields[@]}
  # echo ${fields[@]}
  field_tot=${#fields[@]}
  structure=${fields[0]%,}
  path_to_structure="$PWD/${path_to_structures}/${structure}"
  if [ ! -d "${path_to_structure}" ]; then
    echo -e "Warning! '${structure}' is not exist! Created in '${path_to_structure}'"
    mkdir -p "${path_to_structure}"
  fi
  for (( j=1; j<${field_tot}; j++ )); do
    # echo ${fields[0]%,} ${fields[$j]%,}
    field=${fields[$j]%,}
    path_to_field="${PWD}/${fields[$j]%,}"
    if [ ! -d "${path_to_field}" ]; then
      echo -e "Warning! '${field}' is not exist! Created in '${path_to_field}'"
      mkdir -p "${path_to_field}"
    fi
    ln -sf "${path_to_structure}" "${path_to_field}"
    # echo "${path_to_structure} ${path_to_field}"
  done

done

################################ Debug Console ################################
# Read commands but do not execute them.
# set -n

# Print commands and their arguments as they are executed
# set -x


# Treat unset variables as an error when substituting.
set -u

# Exit immediately if a command exits with a non-zero status.
set -e

# Set the variable corresponding to option-name:
# -o pipefail: the return value of a pipeline is the status of the last
#              command to exit with a non-zero status, or zero if no
#              command exited with a non-zero status
set -o pipefail

